lapply(power_data,class)
power_data <- read.table("household_power_consumption.txt",
sep=";",
header=TRUE,
na.strings=c("?",""),
colClasses=c("character",
"character",
"numeric",
"numeric",
"numeric",
"numeric",
"numeric",
"numeric",
"numeric"))
power_data$Date
power_data[power_data$Date=="01/02/2007"]
power_data
summary(power_data)
filter(power_data, matches(Date,"01/02/2007") || matches(Date,"02/02/2007"))
filter(power_data,Voltage>1)
filter(power_data, matches(Date,"01/02/2007") | matches(Date,"02/02/2007"))
filter(power_data, grepl("01/02/2007",Date))
power_data$Date
filter(power_data, grepl("1/2/2007",Date))
filter(power_data, grepl("1/2/2007|2/2/2007",Date))
source("plot1.R")
length(power_data)
length(power_data$Date)
lapply(power_data,class)
strptime(power_data$Time)
strptime(power_data$Time, "%H:%M:%S")
power_data$Time <- strptime(power_data$Time, "%H:%M:%S")
lapply(power_data,class)
with(power_data, hist(Global_active_power))
summary(power_data)
power_data$Date
source("plot1.R")
power_data$Date
source("plot1.R")
source("plot1.R")
power_data$Date
with(power_data, hist(Global_active_power))
with(power_data, hist(Global_active_power, col="Red", xlab="Global Active Power (kilowatts)", ylab="Frequency", main="Global Active Power"))
source("plot1.R")
power_data$Time
power_data$Date + power_data$Time
source("plot2.R")
lapply(power_data,class)
power_data$Date + power_data$Time
power_data$Time
lapply(power_data,class)
power_data$Date[1]
power_data$Time[1]
power_data$Time$day <- power_data$Date$day
power_data$Time$month <- power_data$Date$month
power_data$Time$year <- power_data$Date$year
power_data$Time[1]
power_data$Time$day <- power_data$Date$day
power_data$Time[1]
power_data$Date[1]
power_data$Time[1]
power_data$Time$yday <- power_data$Date$yday
power_data$Time[1]
power_data$Time$mday <- power_data$Date$mday
power_data$Time[1]
power_data$Time$mon <- power_data$Date$mon
power_data$Time[1]
power_data$Time
with(power_data, plot(Time, Global_active_power))
with(power_data, plot(Time, Global_active_power, type="l"))
with(power_data, plot(Time, Global_active_power, type="l", xlab="", ylab="Global Active Power (kilowatts)"))
source("plot2.R")
source("plot2.R")
source("plot1.R")
with(power_data, plot(Time,
Sub_metering_1,
type="l",
xlab="",
ylab="Energy sub metering"))
source("plot3.R")
with(power_data, lines(Time, Sub_metering_2, col="Red"))
with(power_data, lines(Time, Sub_metering_3, col="Blue"))
legend("topright", legend="Sub_metering_1")
legend("topright", legend="Sub_metering_1", lty=1)
legend("topright", legend="Sub_metering_2", lty=1, col="Red")
legend("topright", legend="Sub_metering_1", lty=1)
legend(2,2, legend="Sub_metering_2", lty=1, col="Red")
legend(0,0, legend="Sub_metering_2", lty=1, col="Red")
legend("topright", legend=c("Sub_metering_1", "Sub_metering_2", "Sub_metering_3"), lty=1, col=c("Black", "Red", "Blue"))
source("plot3.R")
par(mfrow=c(2, 2))
with(power_data, plot(Time,
Global_active_power,
type="l",
xlab="",
ylab="Global Active Power (kilowatts)"))
with(power_data, plot(Time,
Voltage,
type="l",
xlab="datetime")
)
source("plot4.R")
with(power_data, plot(Time,
Sub_metering_1,
type="l",
xlab="",
ylab="Energy sub metering"))
with(power_data, lines(Time, Sub_metering_2, col="Red"))
with(power_data, lines(Time, Sub_metering_3, col="Blue"))
legend("topright", legend=c("Sub_metering_1", "Sub_metering_2", "Sub_metering_3"), lty=1, col=c("Black", "Red", "Blue"))
with(power_data, plot(Time,
Global_reactive_power,
type="l",
xlab="datetime"))
with(power_data, plot(Time,
Voltage,
type="l",
xlab="datetime"))
with(power_data, plot(Time,
Global_active_power,
type="l",
xlab="",
ylab="Global Active Power (kilowatts)"))
with(power_data, plot(Time,
Global_active_power,
type="l",
xlab="",
ylab="Global Active Power (kilowatts)"))
with(power_data, plot(Time,
Voltage,
type="l",
xlab="datetime"))
with(power_data, plot(Time,
Sub_metering_1,
type="l",
xlab="",
ylab="Energy sub metering"))
with(power_data, lines(Time, Sub_metering_2, col="Red"))
with(power_data, lines(Time, Sub_metering_3, col="Blue"))
legend("topright", legend=c("Sub_metering_1", "Sub_metering_2", "Sub_metering_3"), lty=1, col=c("Black", "Red", "Blue"))
with(power_data, plot(Time,
Global_reactive_power,
type="l",
xlab="datetime"))
source("plot4.R")
source("plot4.R")
with(power_data, plot(Time,
Sub_metering_1,
type="l",
xlab="",
ylab="Energy sub metering"))
with(power_data, lines(Time, Sub_metering_2, col="Red"))
with(power_data, lines(Time, Sub_metering_3, col="Blue"))
legend("topright",
legend=c("Sub_metering_1", "Sub_metering_2", "Sub_metering_3"),
lty=1,
col=c("Black", "Red", "Blue"),
box.lwd=0)
source("plot4.R")
source("plot4.R")
install.packages("lattice")
install.packages("ggplot2")
library(ggplot2)
install.packages(c("colorspace", "KernSmooth", "manipulate", "quantmod", "Rcpp", "RMySQL"))
library(ggplot2)
str(mpg)
qplot(displ, hwy, data = mpg)
qplot(displ, hwy, data = mpg, colour = drv)
qplot(displ, hwy, data = mpg, geom = c( "point", "smooth"))
qplot(displ, hwy, data = mpg, facets = .~drv)
qplot(hwy, data = mpg, facets = .~drv)
qplot(hwy, data = mpg, facets = .~drv, binwidth=2)
qplot(hwy, data = mpg, facets = drv~., binwidth=2)
library(nlme)
library(lattice)
xyplot(weight ~ Time | Diet, BodyWeight)
Diet
BodyWeight
?lpoints
?axis
?points
?lines
library(lattice)
library(datasets)
data(airquality)
p <- xyplot(Ozone ~ Wind | factor(Month), data = airquality)
p
?splom
?trellis.par.set
?print.trellis
qplot(Wind, Ozone, data = airquality, facets = . ~ factor(Month))
library(ggplot2)
qplot(Wind, Ozone, data = airquality, facets = . ~ factor(Month))
airquality = transform(airquality, Month = factor(Month))
qplot(Wind, Ozone, data = airquality, facets = . ~ Month)
head(airquality)
g <- ggplot(movies, aes(votes, rating))
print(g)
movies
qplot(votes, rating, data = movies)
qplot(votes, rating, data = movies) + geom_smooth()
qplot(votes, rating, data = movies) + stats_smooth("loess")
qplot(votes, rating, data = movies, smooth = "loess")
x <- rnorm( 12, mean = rep( 1:3, each=4 ), sd=.2)
y <- rnorm( 12, mean = rep( c(1,2,1), each=4 ), sd=.2)
plot(x,y)
dataFrame = data.frame(x=x,y=y)
distxy=dist(dataFrame)
hClustering <- hclust(distxy)
plot(hClustering)
library(dplyr)
source("plot1.R")
setwd("~/Coursera/Exploratory Data Analysis/Project2")
source("plot1.R")
head(NEI)
head(SCC)
head(NEI)
?sapply
?tapply
?aggregate
aggregate(Emissions ~ year, sum, data = NEI)
emissions_by_year <- aggregate(Emissions ~ year, sum, data = NEI)
plot(emissions_by_year)
?plot
plot(emissions_by_year, type="b", main="Total Emissions By Year")
axis(side=1, at=emissions_by_year$year)
plot(emissions_by_year, type="b", main="Total Emissions By Year", axes=FALSE)
axis(side=1, at=emissions_by_year$year)
?axis
axis(side=2)
axis(side=2, XPD=TRUE)
axis(side=2, xpd=TRUE)
plot(emissions_by_year, type="b", main="Total Emissions By Year", axes=FALSE)
axis(side=2, xpd=TRUE)
axis(side=1, at=emissions_by_year$year)
plot(emissions_by_year, type="b", main="Total Emissions By Year")
plot(emissions_by_year, type="b", main="Total Emissions By Year", axes=FALSE)
axis(side=1, at=emissions_by_year$year)
axis(side=2, xpd=TRUE)
box()
plot(emissions_by_year, type="b", main="Total Emissions By Year", axes=FALSE)
axis(side=1, at=emissions_by_year$year)
axis(side=2)
box()
source("plot1.R")
plot(emissions_by_year, type="b", main="Total Emissions By Year", axes=FALSE)
plot(emissions_by_year, type="b", main="Total Emissions By Year", axes=FALSE, ylab="Emmisions (tons)")
source("plot1.R")
?filter
head(NEI)
filtered <- filter(NEI, fips==24510)
head(filtered)
source("plot2.R")
source("plot2.R")
source("plot1.R")
head(filtered_NEI)
emissions_by_year <- aggregate(Emissions ~ year + type, sum, data = filtered_NEI)
head(emissions_by_year)
emiss
emissions_by_year
qplot(year, Emissions, data=emissions_by_year, facets=.~type)
library(ggplot2)
qplot(year, Emissions, data=emissions_by_year, facets=.~type)
?qplot
qplot(year, Emissions, data=emissions_by_year, facets=.~type, geom="line")
qplot(year, Emissions, data=emissions_by_year, facets=.~type, geom="line", ylab="Emissions (tons)")
qplot(year, Emissions, data=emissions_by_year, facets=.~type, geom="line", ylab="Emissions (tons)", main="Emissions by type in Baltimore")
source("plot3.R")
SCC
head(SCC)
head(NEI)
merged_data <- merge(NEI, SCC, by="SCC")
?merge
merged_data <- NULL
length(NEI)
length(SCC)
length(SCC[[1]])
length(NEI[[1]])
?filter
library(dplyr)
?filter
library(ggplot2)
source("plot4.R")
head(NEI)
head(SCC)
coal_SCC <- SCC[, grepl("[Cc]oal", SCC$Short.Name)]
coal_SCC <- SCC[grepl("[Cc]oal", SCC$Short.Name),]
length(coal_SCC)
length(coal_SCC[[1]])
head(NEI)
filtered_NEI <- filter(NEI, SCC %in% coal_SCC$SCC)
length(filtered_NEI)
length(filtered_NEI[[1]])
source("plot4.R")
source("plot4.R")
dev.off
dev.off()
dev.off()
?qplot
source("plot4.R")
?ggsave
source("plot3.R")
cars_SCC <- SCC[grepl("[Cc]ar", SCC$Short.Name),]
cars_SCC
head(cars_SCC)
length(cars_SCC[[1]])
cars_SCC <- SCC[grepl("Mobile", SCC$SCC.Level.One),]
length(cars_SCC[[1]])
head(cars_SCC)
cars_SCC$Short.Name
head(cars_SCC)
cars_SCC$SCC.Level.Three
head(NEI)
head(SCC)
cars_SCC <- SCC[grepl("Vehicle", SCC$EI.Sector),]
head(cars_SCC)
length(cars_SCC[[1]])
cars_SCC$Short.Name
source("plot5.R")
. For this,
head(emissions_by_year)
filtered_NEI
source("plot5.R")
filtered_NEI
filtered_NEI <- filter(NEI, SCC %in% cars_SCC$SCC)
filtered_NEI
length(filtered_NEI[[1]])
filtered_NEI[fips==24510,]
length(filtered_NEI[filtered_NEI$fips==24510,][[1]])
filtered_NEI2 <- filter(filtered_NEI, fips==24510)
length(filtered_NEI2[[1]])
emissions_by_year <- aggregate(Emissions ~ year, sum, data = filtered_NEI2)
emissions_by_year
source("plot5.R")
filtered_NEI <- filter(NEI, SCC %in% cars_SCC$SCC)
filtered_NEI <- filter(filtered_NEI, fips %in c(24510,06037))
filtered_NEI <- filter(filtered_NEI, fips %in% c(24510,06037))
length(filtered_NEI[[1]])
filtered_NEI <- filter(NEI, SCC %in% cars_SCC$SCC)
length(filtered_NEI[[1]])
filtered_NEI <- filter(filtered_NEI, fips %in% c(24510,06037))
length(filtered_NEI[[1]])
filtered_NEI$fips
class(filtered_NEI$fips)
filtered_NEI$fips <- as.numeric(filtered_NEI$fips)
filtered_NEI <- filter(NEI, SCC %in% cars_SCC$SCC)
filtered_NEI$fips <- as.numeric(filtered_NEI$fips)
class(filtered_NEI$fips)
filtered_NEI <- filter(filtered_NEI, fips %in% c(24510,06037))
length(filtered_NEI[[1]])
emissions_by_year <- aggregate(Emissions ~ year + fips, sum, data = filtered_NEI2)
emissions_by_year
filtered_NEI
emissions_by_year
aggregate(Emissions ~ year + fips, sum, data = filtered_NEI2)
aggregate(Emissions ~ year + fips, sum, data = filtered_NEI)
emissions_by_year <- aggregate(Emissions ~ year + fips, sum, data = filtered_NEI)
emissions_by_year
?lapply
?tapply
calc_percentage <- funtion(base) {}
calc_percentage <- funtion(base) {
calc_percentage <- function(base) {
calc_percentage <- function(x,base) { x / base }
tapply(emissions_by_year$Emissions, emissions_by_year$fips, calc_percentage, emissions_by_year$Emissions[1999])
tapply(emissions_by_year$Emissions, emissions_by_year$fips, calc_percentage, emissions_by_year$Emissions["1999"])
tapply(emissions_by_year$Emissions, emissions_by_year$fips, calc_percentage, emissions_by_year$Emissions[1])
?diff
diff(emissions_by_year$Emissions)/emissions_by_year$Emissions[-nrow(emissions_by_year$Emissions),] * 100
diff(emissions_by_year$Emissions)
emissions_by_year
diff(emissions_by_year$Emissions[fips==6037])
diff(emissions_by_year$Emissions[emissions_by_year$fips==6037])
diff(emissions_by_year$Emissions[emissions_by_year$fips==6037])/emissions_by_year$Emissions[1]
(diff(emissions_by_year$Emissions[emissions_by_year$fips==6037])/emissions_by_year$Emissions[1])*100
(diff(emissions_by_year$Emissions[emissions_by_year$fips==6037])/emissions_by_year$Emissions[1])*100+100
(diff(emissions_by_year$Emissions[emissions_by_year$fips==6037])/emissions_by_year$Emissions[emissions_by_year$fips==6037][1])*100+100
install.packages("quantmod")
library(quantmod)
with(emissions_by_year, ave( Emissions, fips, FUN=Delt))
emissions_by_year
4274/3931
emissions_by_year$change <- with(emissions_by_year, ave( Emissions, fips, FUN=Delt))
emissions_by_year
?ave
emissions_by_year$change[is.na(emissions_by_year$change)] <- 0
?ave
emissions_by_year
emissions_by_year$change <- emissions_by_year$change + 100
emissions_by_year <- aggregate(Emissions ~ year + fips, sum, data = filtered_NEI)
emissions_by_year$change <- with(emissions_by_year,
ave(Emissions, fips, FUN=Delt))
emissions_by_year$change[is.na(emissions_by_year$change)] <- 0
emissions_by_year$change <- (emissions_by_year$change * 100) + 100
emissions_by_year
?Delt
emissions_by_year$change2 <-  unlist(tapply(emissions_by_year$Emissions, emissions_by_year$fips, function(x) c(NA, 100*x[-1]/x[1]) )
)
emissions_by_year
?unlist
emissions_by_year$Emissions[-1]
emissions_by_year <- aggregate(Emissions ~ year + fips, sum, data = filtered_NEI)
emissions_by_year$change <- unlist(tapply(emissions_by_year$Emissions,
emissions_by_year$fips,
function(x) c(100, 100*x[-1]/x[1]) ) )
emissions_by_year
g <- ggplot(emissions_by_year, aes(year, change))
g <- ggplot(emissions_by_year, aes(x=year, y=change, colour=fips))
g+geom_point()
g+geom_point()+geom_line()
g <- ggplot(emissions_by_year, aes(x=year, y=change, colour=fips))
g+geom_point()+geom_line()
g <- ggplot(emissions_by_year, aes(x=factor(year), y=change, colour=fips))
g+geom_point()+geom_line()
g <- ggplot(emissions_by_year, aes(x=factor(year), y=change, colour=fips, group=fips))
g+geom_point()+geom_line()
emissions_by_year$fips <- factor(emissions_by_year$fips)
g <- ggplot(emissions_by_year, aes(x=factor(year), y=change, colour=fips, group=fips))
g+geom_point()+geom_line()
g+geom_point()+geom_line() + main("Title")
g+geom_point()+geom_line() + ggtitle("Title")
source("plot6.R")
?revalue
revalue( emissions_by_year$fips, c(24510="Baltimore", 06037="LA County"))
emissions_by_year$fips
filtered_NEI <- filter(NEI, SCC %in% cars_SCC$SCC)
filtered_NEI <- filter(filtered_NEI, fips %in% c("24510","06037"))
length(filtered_NEI[[1]])
filtered_NEI
emissions_by_year <- aggregate(Emissions ~ year + fips, sum, data = filtered_NEI)
emissions_by_year$change <- unlist(tapply(emissions_by_year$Emissions,
emissions_by_year$fips,
function(x) c(100, 100*x[-1]/x[1])))
emissions_by_year
revalue( emissions_by_year$fips, c("24510"="Baltimore", "06037"="LA County"))
library(plyr)
library(dplyr)
revalue( emissions_by_year$fips, c("24510"="Baltimore", "06037"="LA County"))
emissions_by_year$fips <- factor(emissions_by_year$fips)
library(ggplot2)
library(quantmod)
library(plyr)
library(dplyr)
source("plot6.R")
emissions_by_year
revalue( emissions_by_year$fips, c("24510"="Baltimore", "06037"="LA County"))
emissions_by_year
source("plot6.R")
names(emissions_by_year)
names(emissions_by_year$fips)
names(emissions_by_year)[2] <- "County"
names(emissions_by_year)
source("plot6.R")
source("plot3.R")
source("plot3.R")
source("plot3.R")
source("plot6.R")
setwd("~/Coursera/Reproducible Research/RepData_PeerAssessment1")
data <- read.csv( unz( "activity.zip", "activity.csv") )
head(data)
class(data)
class(data$steps)
class(data$date)
class(data$interval)
data$time <- strpftime( data$interval, format="%H%M" )
data$time <- strptime( data$interval, format="%H%M" )
head(data)
data$time <- strftime( data$interval, format="%H%M" )
data$time <- strptime( as.character( data$interval ), format="%H%M" )
head(data)
data$time <- as.character( data$interval )
head(data)
class(data$time)
data$date <- strptime( data$date, format="%Y-%m-%d" )
head(data)
class(data$date)
data$time <- null
data$time <- NULL
head(data)
tapply( data$steps, data$date, sum )
sum( is.na( data$date ) )
aggregate( data$steps, data$time, sum )
aggregate( data$steps, data$date, sum )
aggregate( data, data$date, sum )
aggregate( data, list(Date = data$date), sum )
aggregate( data%steps, list(Date = data$date), sum )
aggregate( data$steps, list(Date = data$date), sum )
aggregate( data$steps, data$date, sum )
length(data$steps)
length(data$date)
length(data)
aggregate( data$steps ~ data$date, data, sum )
aggregate( steps ~ date, data, sum )
class(data$date)
activity_data <- read.csv( unz( "activity.zip", "activity.csv") )
activity_data$date <- strptime( activity_data$date, format="%Y-%m-%d" )
aggregate( steps ~ date, activity_data, sum )
str(activity_data)
activity_data <- read.csv( unz( "activity.zip", "activity.csv") )
aggregate( steps ~ date, activity_data, sum )
steps_per_day <- aggregate( steps ~ date, activity_data, sum )
hist( steps_per_day )
str(steps_per_day)
hist( steps_per_day$steps )
hist( steps_per_day$steps, main="Histogram of steps taken per day", xlab="Steps per day" )
median( steps_per_day$steps )
mean( steps_per_day$steps )
sum( is.na( activity_data$steps ) )
aggregate( steps ~ interval, activity_data, mean )
steps_per_interval <- aggregate( steps ~ interval, activity_data, mean )
plot( steps_per_interval$interval, steps_per_interval$steps, type="l" )
plot( steps_per_interval$interval, steps_per_interval$steps, type="l", main="Average steps taken per interval", xlab="Interval", ylab="Steps" )
